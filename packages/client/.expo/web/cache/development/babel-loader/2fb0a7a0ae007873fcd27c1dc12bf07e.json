{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar path_1 = __importDefault(require(\"path\"));\n\nvar webpack_1 = require(\"webpack\");\n\nvar react_refresh_webpack_plugin_1 = __importDefault(require(\"@pmmmwh/react-refresh-webpack-plugin\"));\n\nvar html_webpack_plugin_1 = __importDefault(require(\"html-webpack-plugin\"));\n\nvar createConfig = function createConfig(_ref) {\n  var dev = _ref.dev;\n  var babelConfig = {\n    sourceType: 'unambiguous',\n    presets: [require.resolve('@babel/preset-env'), require.resolve('@babel/preset-react'), require.resolve('@babel/preset-typescript')],\n    plugins: [require.resolve('@babel/plugin-proposal-class-properties'), require.resolve('@babel/plugin-transform-runtime'), require.resolve('babel-plugin-react-native-web')]\n  };\n\n  if (dev) {\n    babelConfig.plugins = [require.resolve('react-refresh/babel')].concat(_toConsumableArray(babelConfig.plugins));\n  }\n\n  ;\n  var entries = [path_1.default.join(__dirname, '../../src/index')];\n\n  if (dev) {\n    entries = [require.resolve('webpack-hot-middleware/client')].concat(_toConsumableArray(entries));\n  }\n\n  var alias = {\n    'react-native': 'react-native-web'\n  };\n  var plugins = [new html_webpack_plugin_1.default()];\n\n  if (dev) {\n    plugins.push(new webpack_1.HotModuleReplacementPlugin(), new react_refresh_webpack_plugin_1.default({\n      overlay: {\n        sockIntegration: 'whm'\n      }\n    }));\n  }\n\n  var config = {\n    context: __dirname,\n    mode: dev ? 'development' : 'production',\n    entry: entries,\n    resolve: {\n      extensions: ['.web.tsx', '.web.ts', '.tsx', '.ts', '.jsx', '.js'],\n      modules: [path_1.default.join(__dirname, '..', 'src'), 'node_modules'],\n      alias: alias\n    },\n    output: {\n      path: path_1.default.join(__dirname, '../web')\n    },\n    plugins: plugins,\n    module: {\n      rules: [{\n        test: /\\.(png|ttf)$/,\n        use: require.resolve('file-loader')\n      }, {\n        test: /\\.(t|j)sx?$/,\n        use: [{\n          loader: require.resolve('react-hot-loader/webpack')\n        }, {\n          loader: require.resolve('babel-loader'),\n          options: babelConfig\n        }]\n      }]\n    }\n  };\n  return config;\n};\n\nexports.default = createConfig;","map":{"version":3,"sources":["../../tools/createConfig.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path_1 = __importDefault(require(\"path\"));\nconst webpack_1 = require(\"webpack\");\nconst react_refresh_webpack_plugin_1 = __importDefault(require(\"@pmmmwh/react-refresh-webpack-plugin\"));\nconst html_webpack_plugin_1 = __importDefault(require(\"html-webpack-plugin\"));\nconst createConfig = ({ dev, }) => {\n    const babelConfig = {\n        sourceType: 'unambiguous',\n        presets: [\n            require.resolve('@babel/preset-env'),\n            require.resolve('@babel/preset-react'),\n            require.resolve('@babel/preset-typescript'),\n        ],\n        plugins: [\n            require.resolve('@babel/plugin-proposal-class-properties'),\n            require.resolve('@babel/plugin-transform-runtime'),\n            require.resolve('babel-plugin-react-native-web'),\n        ],\n    };\n    if (dev) {\n        babelConfig.plugins = [\n            require.resolve('react-refresh/babel'),\n            ...babelConfig.plugins,\n        ];\n    }\n    ;\n    let entries = [path_1.default.join(__dirname, '../../src/index')];\n    if (dev) {\n        entries = [require.resolve('webpack-hot-middleware/client'), ...entries];\n    }\n    const alias = {\n        'react-native': 'react-native-web',\n    };\n    const plugins = [\n        new html_webpack_plugin_1.default(),\n    ];\n    if (dev) {\n        plugins.push(new webpack_1.HotModuleReplacementPlugin(), new react_refresh_webpack_plugin_1.default({\n            overlay: {\n                sockIntegration: 'whm',\n            },\n        }));\n    }\n    const config = {\n        context: __dirname,\n        mode: dev ? 'development' : 'production',\n        entry: entries,\n        resolve: {\n            extensions: ['.web.tsx', '.web.ts', '.tsx', '.ts', '.jsx', '.js'],\n            modules: [\n                path_1.default.join(__dirname, '..', 'src'),\n                'node_modules',\n            ],\n            alias,\n        },\n        output: {\n            path: path_1.default.join(__dirname, '../web'),\n        },\n        plugins,\n        module: {\n            rules: [{\n                    test: /\\.(png|ttf)$/,\n                    use: require.resolve('file-loader'),\n                }, {\n                    test: /\\.(t|j)sx?$/,\n                    use: [{\n                            loader: require.resolve('react-hot-loader/webpack'),\n                        }, {\n                            loader: require.resolve('babel-loader'),\n                            options: babelConfig,\n                        }],\n                }],\n        },\n    };\n    return config;\n};\nexports.default = createConfig;\n//# sourceMappingURL=createConfig.js.map"]},"metadata":{},"sourceType":"script"}