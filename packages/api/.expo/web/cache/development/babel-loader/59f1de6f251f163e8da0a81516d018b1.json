{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PaginationInput = exports.addPagination = void 0;\n\nvar type_graphql_1 = require(\"type-graphql\");\n\nvar PaginationInput = function PaginationInput() {\n  _classCallCheck(this, PaginationInput);\n};\n\n__decorate([type_graphql_1.Field({\n  nullable: true\n}), __metadata(\"design:type\", Number)], PaginationInput.prototype, \"offset\", void 0);\n\n__decorate([type_graphql_1.Field({\n  nullable: true\n}), __metadata(\"design:type\", Number)], PaginationInput.prototype, \"limit\", void 0);\n\nPaginationInput = __decorate([type_graphql_1.InputType()], PaginationInput);\nexports.PaginationInput = PaginationInput;\n\nvar addPagination = function addPagination(query, input) {\n  var count, itemQuery, items, response;\n  return _regeneratorRuntime.async(function addPagination$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(query.clone().count());\n\n        case 2:\n          count = _context.sent;\n          itemQuery = query;\n\n          if (input.offset) {\n            itemQuery = itemQuery.offset(input.offset);\n          }\n\n          if (input.limit) {\n            itemQuery = itemQuery.limit(input.limit);\n          }\n\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(itemQuery);\n\n        case 8:\n          items = _context.sent;\n          response = {\n            count: count,\n            items: items,\n            hasMore: true\n          };\n          return _context.abrupt(\"return\", response);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.addPagination = addPagination;","map":{"version":3,"sources":["../../../src/schemas/Pagination.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAGA,IAAM,eAAN;AAAA;AAAA,CAAA;;AAEE,UAAA,CAAA,CADC,cAAA,CAAA,KAAA,CAAM;AAAE,EAAA,QAAQ,EAAE;AAAZ,CAAN,CACD,E,iCAAA,CAAA,E,yBAAA,E,QAAA,E,KAAuB,CAAvB,CAAA;;AAGA,UAAA,CAAA,CADC,cAAA,CAAA,KAAA,CAAM;AAAE,EAAA,QAAQ,EAAE;AAAZ,CAAN,CACD,E,iCAAA,CAAA,E,yBAAA,E,OAAA,E,KAAsB,CAAtB,CAAA;;AALI,eAAe,GAAA,UAAA,CAAA,CADpB,cAAA,CAAA,SAAA,EACoB,CAAA,EAAf,eAAe,CAAf;AAmCJ,OAAA,CAAA,eAAA,GAAA,eAAA;;AArBF,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAc,KAAd,EAA0C,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACA,KAAK,CAAC,KAAN,GAAc,KAAd,EADA;;AAAA;AACd,UAAA,KADc;AAEhB,UAAA,SAFgB,GAEJ,KAFI;;AAGpB,cAAI,KAAK,CAAC,MAAV,EAAkB;AAChB,YAAA,SAAS,GAAG,SAAS,CAAC,MAAV,CAAiB,KAAK,CAAC,MAAvB,CAAZ;AACD;;AACD,cAAI,KAAK,CAAC,KAAV,EAAiB;AACf,YAAA,SAAS,GAAG,SAAS,CAAC,KAAV,CAAgB,KAAK,CAAC,KAAtB,CAAZ;AACD;;AARmB;AAAA,2CASA,SATA;;AAAA;AASd,UAAA,KATc;AAUd,UAAA,QAVc,GAUwB;AAC1C,YAAA,KAAK,EAAL,KAD0C;AAE1C,YAAA,KAAK,EAAL,KAF0C;AAG1C,YAAA,OAAO,EAAE;AAHiC,WAVxB;AAAA,2CAeb,QAfa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAmBE,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PaginationInput = exports.addPagination = void 0;\nconst type_graphql_1 = require(\"type-graphql\");\nlet PaginationInput = class PaginationInput {\n};\n__decorate([\n    type_graphql_1.Field({ nullable: true }),\n    __metadata(\"design:type\", Number)\n], PaginationInput.prototype, \"offset\", void 0);\n__decorate([\n    type_graphql_1.Field({ nullable: true }),\n    __metadata(\"design:type\", Number)\n], PaginationInput.prototype, \"limit\", void 0);\nPaginationInput = __decorate([\n    type_graphql_1.InputType()\n], PaginationInput);\nexports.PaginationInput = PaginationInput;\nconst addPagination = async (query, input) => {\n    const count = await query.clone().count();\n    let itemQuery = query;\n    if (input.offset) {\n        itemQuery = itemQuery.offset(input.offset);\n    }\n    if (input.limit) {\n        itemQuery = itemQuery.limit(input.limit);\n    }\n    const items = await itemQuery;\n    const response = {\n        count,\n        items,\n        hasMore: true,\n    };\n    return response;\n};\nexports.addPagination = addPagination;\n//# sourceMappingURL=Pagination.js.map"]},"metadata":{},"sourceType":"script"}