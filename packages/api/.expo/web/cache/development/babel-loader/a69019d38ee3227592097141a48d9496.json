{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar server_1 = __importDefault(require(\"./server\"));\n\nvar main = function main() {\n  var app;\n  return _regeneratorRuntime.async(function main$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(server_1.default());\n\n        case 2:\n          app = _context.sent;\n          app.listen(4000, function () {\n            console.log('Server is running on http://localhost:4000/graphql');\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nmain().catch(console.error);","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,YAAA,CAAA;;AAEA,IAAM,IAAI,GAAG,SAAP,IAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACO,QAAA,CAAA,OAAA,EADP;;AAAA;AACL,UAAA,GADK;AAEX,UAAA,GAAG,CAAC,MAAJ,CAAW,IAAX,EAAiB,YAAK;AACpB,YAAA,OAAO,CAAC,GAAR,CAAY,oDAAZ;AACD,WAFD;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;AAOA,IAAI,GAAG,KAAP,CAAa,OAAO,CAAC,KAArB","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst server_1 = __importDefault(require(\"./server\"));\nconst main = async () => {\n    const app = await server_1.default();\n    app.listen(4000, () => {\n        console.log('Server is running on http://localhost:4000/graphql');\n    });\n};\nmain().catch(console.error);\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}