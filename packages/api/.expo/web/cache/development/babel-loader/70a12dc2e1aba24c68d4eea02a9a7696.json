{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResourceFieldInput = exports.ResourceInput = exports.FieldSearchInput = exports.SearchInput = void 0;\n\nvar typedi_1 = require(\"typedi\");\n\nvar nanoid_1 = require(\"nanoid\");\n\nvar type_graphql_1 = require(\"type-graphql\");\n\nvar DBService_1 = __importDefault(require(\"./DBService\"));\n\nvar Pagination_1 = require(\"../schemas/Pagination\");\n\nvar FieldSearchInput = function FieldSearchInput() {\n  _classCallCheck(this, FieldSearchInput);\n\n  this.value = '';\n};\n\n__decorate([type_graphql_1.Field({\n  nullable: true\n}), __metadata(\"design:type\", String)], FieldSearchInput.prototype, \"name\", void 0);\n\n__decorate([type_graphql_1.Field(), __metadata(\"design:type\", String)], FieldSearchInput.prototype, \"value\", void 0);\n\nFieldSearchInput = __decorate([type_graphql_1.InputType()], FieldSearchInput);\nexports.FieldSearchInput = FieldSearchInput;\n\nvar SearchInput = function SearchInput() {\n  _classCallCheck(this, SearchInput);\n};\n\n__decorate([type_graphql_1.Field(function () {\n  return [String];\n}, {\n  nullable: true\n}), __metadata(\"design:type\", Array)], SearchInput.prototype, \"ids\", void 0);\n\n__decorate([type_graphql_1.Field(function () {\n  return [String];\n}, {\n  nullable: true\n}), __metadata(\"design:type\", Array)], SearchInput.prototype, \"types\", void 0);\n\n__decorate([type_graphql_1.Field(function () {\n  return [String];\n}, {\n  nullable: true\n}), __metadata(\"design:type\", Array)], SearchInput.prototype, \"assignedTo\", void 0);\n\n__decorate([type_graphql_1.Field(function () {\n  return [String];\n}, {\n  nullable: true\n}), __metadata(\"design:type\", Array)], SearchInput.prototype, \"refs\", void 0);\n\n__decorate([type_graphql_1.Field({\n  nullable: true\n}), __metadata(\"design:type\", String)], SearchInput.prototype, \"text\", void 0);\n\n__decorate([type_graphql_1.Field(function () {\n  return [FieldSearchInput];\n}, {\n  nullable: true\n}), __metadata(\"design:type\", Array)], SearchInput.prototype, \"fields\", void 0);\n\nSearchInput = __decorate([type_graphql_1.InputType()], SearchInput);\nexports.SearchInput = SearchInput;\n\nvar ResourceInput = function ResourceInput() {\n  _classCallCheck(this, ResourceInput);\n\n  this.typeId = '';\n  this.name = '';\n};\n\n__decorate([type_graphql_1.Field({\n  nullable: true\n}), __metadata(\"design:type\", String)], ResourceInput.prototype, \"id\", void 0);\n\n__decorate([type_graphql_1.Field(), __metadata(\"design:type\", String)], ResourceInput.prototype, \"typeId\", void 0);\n\n__decorate([type_graphql_1.Field(), __metadata(\"design:type\", String)], ResourceInput.prototype, \"name\", void 0);\n\n__decorate([type_graphql_1.Field({\n  nullable: true\n}), __metadata(\"design:type\", String)], ResourceInput.prototype, \"description\", void 0);\n\n__decorate([type_graphql_1.Field({\n  nullable: true\n}), __metadata(\"design:type\", String)], ResourceInput.prototype, \"ref\", void 0);\n\n__decorate([type_graphql_1.Field({\n  nullable: true\n}), __metadata(\"design:type\", String)], ResourceInput.prototype, \"status\", void 0);\n\n__decorate([type_graphql_1.Field({\n  nullable: true\n}), __metadata(\"design:type\", Number)], ResourceInput.prototype, \"acquisitionTime\", void 0);\n\n__decorate([type_graphql_1.Field({\n  nullable: true\n}), __metadata(\"design:type\", Number)], ResourceInput.prototype, \"acquisitionPrice\", void 0);\n\n__decorate([type_graphql_1.Field({\n  nullable: true\n}), __metadata(\"design:type\", String)], ResourceInput.prototype, \"acquisitionCurrency\", void 0);\n\nResourceInput = __decorate([type_graphql_1.InputType()], ResourceInput);\nexports.ResourceInput = ResourceInput;\n\nvar ResourceFieldInput = function ResourceFieldInput() {\n  _classCallCheck(this, ResourceFieldInput);\n\n  this.name = '';\n  this.type = '';\n  this.value = '';\n};\n\n__decorate([type_graphql_1.Field(), __metadata(\"design:type\", String)], ResourceFieldInput.prototype, \"name\", void 0);\n\n__decorate([type_graphql_1.Field(), __metadata(\"design:type\", String)], ResourceFieldInput.prototype, \"type\", void 0);\n\n__decorate([type_graphql_1.Field(), __metadata(\"design:type\", String)], ResourceFieldInput.prototype, \"value\", void 0);\n\nResourceFieldInput = __decorate([type_graphql_1.InputType()], ResourceFieldInput);\nexports.ResourceFieldInput = ResourceFieldInput;\n\nvar ResourceService = function () {\n  function ResourceService(dbService) {\n    var _this = this;\n\n    _classCallCheck(this, ResourceService);\n\n    this.dbService = dbService;\n\n    this.search = function _callee(input) {\n      var pagination,\n          query,\n          result,\n          _args = arguments;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pagination = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              query = _this.db('resources');\n\n              if (input.ids) {\n                query = query.whereIn('id', input.ids);\n              }\n\n              if (input.types) {\n                query = query.whereIn('type', input.types);\n              }\n\n              if (input.refs) {\n                query = query.whereIn('ref', input.refs);\n              }\n\n              if (input.assignedTo) {\n                query = query.whereIn('assignedTo', input.assignedTo);\n              }\n\n              if (!input.text) {\n                _context.next = 8;\n                break;\n              }\n\n              throw new Error('Full text search not yet implemented');\n\n            case 8:\n              if (!input.fields) {\n                _context.next = 10;\n                break;\n              }\n\n              throw new Error('Field search not yet implemented');\n\n            case 10:\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(Pagination_1.addPagination(query, pagination));\n\n            case 12:\n              result = _context.sent;\n              return _context.abrupt(\"return\", result);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.add = function _callee2(resource, quantity, fields) {\n      var trx, resources, result;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(_this.db.transaction());\n\n            case 2:\n              trx = _context2.sent;\n              resources = new Array(quantity).fill(undefined).map(function () {\n                return {\n                  type: resource.typeId,\n                  id: resource.id || nanoid_1.nanoid(),\n                  name: resource.name,\n                  ref: resource.ref,\n                  status: resource.status,\n                  description: resource.description,\n                  acquisitionCurrency: resource.acquisitionCurrency,\n                  acquisitionTime: resource.acquisitionTime,\n                  acquisitionPrice: resource.acquisitionPrice\n                };\n              });\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(trx('resources').insert(resources));\n\n            case 6:\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(trx.commit());\n\n            case 8:\n              _context2.next = 10;\n              return _regeneratorRuntime.awrap(_this.search({\n                ids: resources.map(function (resource) {\n                  return resource.id;\n                })\n              }));\n\n            case 10:\n              result = _context2.sent;\n              return _context2.abrupt(\"return\", result.items);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.delete = function _callee3(resourceId) {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(_this.db('resources').delete().where({\n                id: resourceId\n              }));\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.assign = function _callee4(resourceId, assignTo) {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(_this.db('resources').update({\n                assignedTo: assignTo\n              }).where({\n                id: resourceId\n              }));\n\n            case 2:\n              return _context4.abrupt(\"return\", _this.db('resources').where({\n                id: resourceId\n              }).first());\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.addDocuments = function _callee5(resourceId, documentIds) {\n      var documents;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              documents = documentIds.map(function (documentId) {\n                return {\n                  resource: resourceId,\n                  document: documentId\n                };\n              });\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(_this.db('resource_documents').insert(documents));\n\n            case 3:\n              return _context5.abrupt(\"return\", _this.db('resources').where({\n                id: resourceId\n              }).first());\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.removeDocument = function _callee6(resourceId, documentId) {\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(_this.db('resource_documents').delete().where({\n                resource: resourceId,\n                document: documentId\n              }));\n\n            case 2:\n              return _context6.abrupt(\"return\", _this.db('resources').where({\n                id: resourceId\n              }).first());\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.setStatus = function _callee7(resourceId, status) {\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return _regeneratorRuntime.awrap(_this.db('resources').update({\n                status: status\n              }).where({\n                id: resourceId\n              }));\n\n            case 2:\n              return _context7.abrupt(\"return\", _this.db('resources').where({\n                id: resourceId\n              }).first());\n\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.getAllChildren = function _callee8(resourceId) {\n      var toScan, result, _await$_this$search, items;\n\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              toScan = [resourceId];\n              result = [];\n\n            case 2:\n              if (!(toScan.length > 0)) {\n                _context8.next = 11;\n                break;\n              }\n\n              _context8.next = 5;\n              return _regeneratorRuntime.awrap(_this.search({\n                assignedTo: toScan\n              }));\n\n            case 5:\n              _await$_this$search = _context8.sent;\n              items = _await$_this$search.items;\n              result = [].concat(_toConsumableArray(result), _toConsumableArray(items));\n              toScan = items.map(function (item) {\n                return item.id;\n              });\n              _context8.next = 2;\n              break;\n\n            case 11:\n              ;\n              return _context8.abrupt(\"return\", result);\n\n            case 13:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n  }\n\n  _createClass(ResourceService, [{\n    key: \"db\",\n    get: function get() {\n      return this.dbService.db;\n    }\n  }]);\n\n  return ResourceService;\n}();\n\nResourceService = __decorate([typedi_1.Service(), __metadata(\"design:paramtypes\", [DBService_1.default])], ResourceService);\nexports.default = ResourceService;","map":{"version":3,"sources":["../../../src/services/ResourceService.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResourceFieldInput = exports.ResourceInput = exports.FieldSearchInput = exports.SearchInput = void 0;\nconst typedi_1 = require(\"typedi\");\nconst nanoid_1 = require(\"nanoid\");\nconst type_graphql_1 = require(\"type-graphql\");\nconst DBService_1 = __importDefault(require(\"./DBService\"));\nconst Pagination_1 = require(\"../schemas/Pagination\");\nlet FieldSearchInput = class FieldSearchInput {\n    constructor() {\n        this.value = '';\n    }\n};\n__decorate([\n    type_graphql_1.Field({ nullable: true }),\n    __metadata(\"design:type\", String)\n], FieldSearchInput.prototype, \"name\", void 0);\n__decorate([\n    type_graphql_1.Field(),\n    __metadata(\"design:type\", String)\n], FieldSearchInput.prototype, \"value\", void 0);\nFieldSearchInput = __decorate([\n    type_graphql_1.InputType()\n], FieldSearchInput);\nexports.FieldSearchInput = FieldSearchInput;\nlet SearchInput = class SearchInput {\n};\n__decorate([\n    type_graphql_1.Field(() => [String], { nullable: true }),\n    __metadata(\"design:type\", Array)\n], SearchInput.prototype, \"ids\", void 0);\n__decorate([\n    type_graphql_1.Field(() => [String], { nullable: true }),\n    __metadata(\"design:type\", Array)\n], SearchInput.prototype, \"types\", void 0);\n__decorate([\n    type_graphql_1.Field(() => [String], { nullable: true }),\n    __metadata(\"design:type\", Array)\n], SearchInput.prototype, \"assignedTo\", void 0);\n__decorate([\n    type_graphql_1.Field(() => [String], { nullable: true }),\n    __metadata(\"design:type\", Array)\n], SearchInput.prototype, \"refs\", void 0);\n__decorate([\n    type_graphql_1.Field({ nullable: true }),\n    __metadata(\"design:type\", String)\n], SearchInput.prototype, \"text\", void 0);\n__decorate([\n    type_graphql_1.Field(() => [FieldSearchInput], { nullable: true }),\n    __metadata(\"design:type\", Array)\n], SearchInput.prototype, \"fields\", void 0);\nSearchInput = __decorate([\n    type_graphql_1.InputType()\n], SearchInput);\nexports.SearchInput = SearchInput;\nlet ResourceInput = class ResourceInput {\n    constructor() {\n        this.typeId = '';\n        this.name = '';\n    }\n};\n__decorate([\n    type_graphql_1.Field({ nullable: true }),\n    __metadata(\"design:type\", String)\n], ResourceInput.prototype, \"id\", void 0);\n__decorate([\n    type_graphql_1.Field(),\n    __metadata(\"design:type\", String)\n], ResourceInput.prototype, \"typeId\", void 0);\n__decorate([\n    type_graphql_1.Field(),\n    __metadata(\"design:type\", String)\n], ResourceInput.prototype, \"name\", void 0);\n__decorate([\n    type_graphql_1.Field({ nullable: true }),\n    __metadata(\"design:type\", String)\n], ResourceInput.prototype, \"description\", void 0);\n__decorate([\n    type_graphql_1.Field({ nullable: true }),\n    __metadata(\"design:type\", String)\n], ResourceInput.prototype, \"ref\", void 0);\n__decorate([\n    type_graphql_1.Field({ nullable: true }),\n    __metadata(\"design:type\", String)\n], ResourceInput.prototype, \"status\", void 0);\n__decorate([\n    type_graphql_1.Field({ nullable: true }),\n    __metadata(\"design:type\", Number)\n], ResourceInput.prototype, \"acquisitionTime\", void 0);\n__decorate([\n    type_graphql_1.Field({ nullable: true }),\n    __metadata(\"design:type\", Number)\n], ResourceInput.prototype, \"acquisitionPrice\", void 0);\n__decorate([\n    type_graphql_1.Field({ nullable: true }),\n    __metadata(\"design:type\", String)\n], ResourceInput.prototype, \"acquisitionCurrency\", void 0);\nResourceInput = __decorate([\n    type_graphql_1.InputType()\n], ResourceInput);\nexports.ResourceInput = ResourceInput;\nlet ResourceFieldInput = class ResourceFieldInput {\n    constructor() {\n        this.name = '';\n        this.type = '';\n        this.value = '';\n    }\n};\n__decorate([\n    type_graphql_1.Field(),\n    __metadata(\"design:type\", String)\n], ResourceFieldInput.prototype, \"name\", void 0);\n__decorate([\n    type_graphql_1.Field(),\n    __metadata(\"design:type\", String)\n], ResourceFieldInput.prototype, \"type\", void 0);\n__decorate([\n    type_graphql_1.Field(),\n    __metadata(\"design:type\", String)\n], ResourceFieldInput.prototype, \"value\", void 0);\nResourceFieldInput = __decorate([\n    type_graphql_1.InputType()\n], ResourceFieldInput);\nexports.ResourceFieldInput = ResourceFieldInput;\nlet ResourceService = class ResourceService {\n    constructor(dbService) {\n        this.dbService = dbService;\n        this.search = async (input, pagination = {}) => {\n            let query = this.db('resources');\n            if (input.ids) {\n                query = query.whereIn('id', input.ids);\n            }\n            if (input.types) {\n                query = query.whereIn('type', input.types);\n            }\n            if (input.refs) {\n                query = query.whereIn('ref', input.refs);\n            }\n            if (input.assignedTo) {\n                query = query.whereIn('assignedTo', input.assignedTo);\n            }\n            if (input.text) {\n                throw new Error('Full text search not yet implemented');\n            }\n            if (input.fields) {\n                throw new Error('Field search not yet implemented');\n            }\n            const result = await Pagination_1.addPagination(query, pagination);\n            return result;\n        };\n        this.add = async (resource, quantity, fields) => {\n            const trx = await this.db.transaction();\n            const resources = new Array(quantity).fill(undefined).map(() => ({\n                type: resource.typeId,\n                id: resource.id || nanoid_1.nanoid(),\n                name: resource.name,\n                ref: resource.ref,\n                status: resource.status,\n                description: resource.description,\n                acquisitionCurrency: resource.acquisitionCurrency,\n                acquisitionTime: resource.acquisitionTime,\n                acquisitionPrice: resource.acquisitionPrice,\n            }));\n            await trx('resources').insert(resources);\n            await trx.commit();\n            const result = await this.search({\n                ids: resources.map(resource => resource.id),\n            });\n            return result.items;\n        };\n        this.delete = async (resourceId) => {\n            await this.db('resources').delete().where({ id: resourceId });\n        };\n        this.assign = async (resourceId, assignTo) => {\n            await this.db('resources').update({\n                assignedTo: assignTo,\n            }).where({ id: resourceId });\n            return this.db('resources').where({ id: resourceId }).first();\n        };\n        this.addDocuments = async (resourceId, documentIds) => {\n            const documents = documentIds.map((documentId) => ({\n                resource: resourceId,\n                document: documentId,\n            }));\n            await this.db('resource_documents').insert(documents);\n            return this.db('resources').where({ id: resourceId }).first();\n        };\n        this.removeDocument = async (resourceId, documentId) => {\n            await this.db('resource_documents').delete().where({\n                resource: resourceId,\n                document: documentId,\n            });\n            return this.db('resources').where({ id: resourceId }).first();\n        };\n        this.setStatus = async (resourceId, status) => {\n            await this.db('resources').update({\n                status,\n            }).where({ id: resourceId });\n            return this.db('resources').where({ id: resourceId }).first();\n        };\n        this.getAllChildren = async (resourceId) => {\n            let toScan = [resourceId];\n            let result = [];\n            while (toScan.length > 0) {\n                const { items } = await this.search({ assignedTo: toScan });\n                result = [...result, ...items];\n                toScan = items.map(item => item.id);\n            }\n            ;\n            return result;\n        };\n    }\n    get db() {\n        return this.dbService.db;\n    }\n};\nResourceService = __decorate([\n    typedi_1.Service(),\n    __metadata(\"design:paramtypes\", [DBService_1.default])\n], ResourceService);\nexports.default = ResourceService;\n//# sourceMappingURL=ResourceService.js.map"]},"metadata":{},"sourceType":"script"}